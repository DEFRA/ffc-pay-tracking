const { getStatus } = require('../../../../app/data-generation/get-status')
const {
  PAYMENT_EXTRACTED,
  PAYMENT_ENRICHED,
  PAYMENT_PAUSED_CROSS_BORDER,
  PAYMENT_PAUSED_DEBT,
  PAYMENT_DEBT_ATTACHED,
  PAYMENT_PAUSED_LEDGER,
  PAYMENT_LEDGER_ASSIGNED,
  PAYMENT_PAUSED_QUALITY_CHECK,
  PAYMENT_QUALITY_CHECK_FAILED,
  PAYMENT_QUALITY_CHECK_PASSED,
  PAYMENT_RESET,
  PAYMENT_SUPPRESSED,
  PAYMENT_PROCESSED,
  PAYMENT_SUBMITTED,
  PAYMENT_ACKNOWLEDGED,
  PAYMENT_SETTLED
} = require('../../../../app/constants/events')
const {
  PAYMENT_EXTRACTED_STATUS,
  PAYMENT_ENRICHED_STATUS,
  PAYMENT_PAUSED_CROSS_BORDER_STATUS,
  PAYMENT_PAUSED_DEBT_STATUS,
  PAYMENT_DEBT_ATTACHED_STATUS,
  PAYMENT_PAUSED_LEDGER_STATUS,
  PAYMENT_LEDGER_ASSIGNED_STATUS,
  PAYMENT_PAUSED_QUALITY_CHECK_STATUS,
  PAYMENT_QUALITY_CHECK_FAILED_STATUS,
  PAYMENT_QUALITY_CHECK_PASSED_STATUS,
  PAYMENT_RESET_STATUS,
  PAYMENT_SUPPRESSED_STATUS,
  PAYMENT_PROCESSED_STATUS,
  PAYMENT_SUBMITTED_STATUS,
  PAYMENT_ACKNOWLEDGED_STATUS,
  PAYMENT_SETTLED_STATUS
} = require('../../../../app/constants/statuses')

test('getStatus', () => {
  expect(getStatus({ type: PAYMENT_EXTRACTED })).toBe(PAYMENT_EXTRACTED_STATUS)
  expect(getStatus({ type: PAYMENT_ENRICHED })).toBe(PAYMENT_ENRICHED_STATUS)
  expect(getStatus({ type: PAYMENT_PAUSED_CROSS_BORDER })).toBe(PAYMENT_PAUSED_CROSS_BORDER_STATUS)
  expect(getStatus({ type: PAYMENT_PAUSED_DEBT })).toBe(PAYMENT_PAUSED_DEBT_STATUS)
  expect(getStatus({ type: PAYMENT_DEBT_ATTACHED })).toBe(PAYMENT_DEBT_ATTACHED_STATUS)
  expect(getStatus({ type: PAYMENT_PAUSED_LEDGER })).toBe(PAYMENT_PAUSED_LEDGER_STATUS)
  expect(getStatus({ type: PAYMENT_LEDGER_ASSIGNED })).toBe(PAYMENT_LEDGER_ASSIGNED_STATUS)
  expect(getStatus({ type: PAYMENT_PAUSED_QUALITY_CHECK })).toBe(PAYMENT_PAUSED_QUALITY_CHECK_STATUS)
  expect(getStatus({ type: PAYMENT_QUALITY_CHECK_FAILED })).toBe(PAYMENT_QUALITY_CHECK_FAILED_STATUS)
  expect(getStatus({ type: PAYMENT_QUALITY_CHECK_PASSED })).toBe(PAYMENT_QUALITY_CHECK_PASSED_STATUS)
  expect(getStatus({ type: PAYMENT_RESET })).toBe(PAYMENT_RESET_STATUS)
  expect(getStatus({ type: PAYMENT_SUPPRESSED })).toBe(PAYMENT_SUPPRESSED_STATUS)
  expect(getStatus({ type: PAYMENT_PROCESSED })).toBe(PAYMENT_PROCESSED_STATUS)
  expect(getStatus({ type: PAYMENT_SUBMITTED })).toBe(PAYMENT_SUBMITTED_STATUS)
  expect(getStatus({ type: PAYMENT_ACKNOWLEDGED })).toBe(PAYMENT_ACKNOWLEDGED_STATUS)
  expect(getStatus({ type: PAYMENT_SETTLED })).toBe(PAYMENT_SETTLED_STATUS)
  expect(getStatus({ type: 'OTHER_EVENT' })).toBeUndefined()
})
